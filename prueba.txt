-/ Prueba Declaraciones /-
DIM [a] AS [string]
DIM [e,b,c,f,h] AS [string,integer,real,real,integer]
DIM [string_var, int_var, real_var] AS [string, integer, real]

-/ Prueba de /- Comentario /-

-/ Prueba Asignaciones /-
string_var := "sarasa"
int_var := 32764
real_var := 12349.123111
real_var := 1.
real_var := .1

b := 6 * 56 - 59
b := ((b-1)/3 + 5) * 7
c := 19 * 13
f := 1 + 1
f := 2 - 123
f := 1 * 1
f := 2 / 1
f := 1.5 + 1 * 1
f := 1 - 1 * 1
f := 1 + 2.5 / 1
f := 1 - 1 / 1.0
f := int_var * real_var / 15 + 10.1 - 1

a := a ++ e
a := a ++ "string"
a := "string" ++ a
a := "string" ++ "string"
e := a

-/ Prueba Write /-
WRITE a
WRITE "HOLA"

-/ Prueba Read /-
READ b
READ c

-/ Preba If Else /-
IF (f > b) 
	h := 55
	IF (f < c) 
		h := 1242
	ENDIF
ELSE
	h := 69
ENDIF

-/ Prueba If /-
IF (f != c) 
	f := 53
ENDIF

-/ Prueba While /-
WHILE (f > 0)
	f := f - 1
ENDWHILE

-/ Prueba condiciones multiples /-
WHILE (f > 3 && b < 3)
	WRITE "Conicion multiple con and"
ENDWHILE

IF (f >= 3 || b <= 3)
	WRITE "Conicion multiple con or"
ENDIF

-/ Prueba condicion negada /-
IF(NOT h == b) 
	WRITE "Conicion negada"
ENDIF

-/ Temas Especiales /-
IF(NOT AllEqual([1,2,4],[3,5,6],[1/5,55,2+3*4])) 
	WRITE "Conicion negada"
ENDIF

WHILE(#Iguales(3,[b,h,f]) < 3 && AllEqual([#Iguales(b,[h,f*44,c*f/h]),b*f,4],[3,5,6],[1/5,55,2+3*4]))
	h := #Iguales(b,[c,h]) * f / (#Iguales(15,[c,f]) + 1)
ENDWHILE

h := #Iguales(c+b, [2,3,5])