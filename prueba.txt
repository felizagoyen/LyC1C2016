-/ Prueba Declaraciones /-
DIM [a] AS [string]
DIM [e,b,c,f,h] AS [string,integer,real,real,integer]
DIM [string_var, int_var, real_var] AS [string, integer, real]

-/ Prueba de /- Comentario /- 
WRITE "Ingrese un numero entero"
READ int_var
WRITE "El numero ingresado es:"
WRITE int_var

WRITE "Ingrese un numero real"
READ c
WRITE "El numero ingresado es:"
WRITE c

string_var := "123456789012345678901234567890"
WRITE string_var

string_var := "Grupo06"
WRITE string_var

WRITE "Prueba de " ++ "Concatenacion"

b := ((b-1)/3 + 5) * 7
WRITE b

-/ Preba If Else /-
int_var := 0
WHILE(int_var <= 5)
	WRITE int_var
	int_var := int_var + 1
ENDWHILE 

-/ Prueba If /-
WRITE "Ingrese un numero"
READ int_var
IF (int_var == 5 || int_var == 8) 
	WRITE "Ingreso el 5 o el 8"
ELSE
	WRITE "No Ingreso ni 5 ni 8"
ENDIF

-/ Temas Especiales /-
IF(NOT AllEqual([1,2,4],[1,2,3],[1/5,55,2+3*4])) 
	WRITE "Condicion negada"
ENDIF

h := #Iguales(1, [#Iguales(1,[1]),3,1])
WRITE "Cantidad de iguales"
WRITE h